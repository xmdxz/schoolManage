<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.SchoolManage.dao.StudentDao">
    <insert id="insertStudent">
        insert into student
            values (#{id},#{name},#{sex},#{comy},#{clno},#{major},#{present_class},#{phone},#{bedroom_lou},
                    #{birth},#{nativeplace},#{address},#{father_phone},#{mother_phone},#{father_profession},
                    #{mother_profession},#{mother_name},#{father_name},#{photo},#{original_class},#{original_post},#{present_post},
                    #{nation},#{religion},#{bedroom_hao},#{idcard},#{bank})
    </insert>
    <insert id="insertBatchStudent" >
        insert into student
            values
                <foreach collection="list" separator="," item="item">
                    (#{item.id},#{item.name},#{item.sex},#{item.comy},#{item.clno},#{item.major},#{item.present_class},#{item.phone},#{item.bedroom_lou},
                    #{item.birth},#{item.nativeplace},#{item.address},#{item.father_phone},#{item.mother_phone},#{item.photo},
                    #{item.father_profession},#{item.mother_profession},#{item.mother_name},#{item.father_name},#{item.original_class},#{item.original_post},#{item.present_post},#{item.nation},#{item.religion},#{item.bedroom_hao},
                    #{item.idcard},#{item.bank})
                </foreach>
    </insert>
    <update id="updateStudent">
        update student set
                           name = #{name},
                           sex = #{sex},
                           comy = #{comy},
                           clno = #{clno},
                           major = #{major},
                           present_class = #{present_class},
                           phone = #{phone},
                           bedroom_lou = #{bedroom_lou},
                           birth = #{birth},
                           nativeplace = #{nativeplace},
                           address = #{address},
                           father_name = #{father_name},
                           mother_name = #{mother_name},
                           father_phone = #{father_phone},
                           mother_phone = #{mother_phone},
                           father_profession = #{father_profession},
                           mother_profession = #{mother_profession},
                           photo = #{photo},
                           original_class = #{original_class},
                           original_post = #{original_post},
                           present_post = #{present_post},
                           nation = #{nation},
                           religion = #{religion},
                           bedroom_hao = #{bedroom_hao},
                           idcard = #{idcard},
                           bank = #{bank}
        where id = #{id}
    </update>
    <delete id="deleteStudent">
        delete from student where id = #{id}
    </delete>
    <select id="findById" resultType="com.SchoolManage.pojo.Student">
        select * from student where id = #{id}
    </select>
    <select id="findByName" resultType="com.SchoolManage.pojo.Student">
        select * from student where name like "%" #{name} "%"
    </select>
    <select id="findByClass_or" resultType="com.SchoolManage.pojo.Student">
        select * from student where original_class like "%" #{original_class} "%"
    </select>
    <select id="findByMajor" resultType="com.SchoolManage.pojo.Student">
        select * from student where major like "%" #{major} "%"
    </select>
    <select id="findByClass_pe" resultType="com.SchoolManage.pojo.Student">
        select * from student where present_class like "%" #{present_class} "%"
    </select>
    <select id="findAll" resultType="com.SchoolManage.pojo.Student">
        select * from student;
    </select>
    <select id="selectStudentNum" resultType="java.lang.Integer">
        select count(*) from student
            <where>
                <if test="conditionName != null and conditionName != '' and conditionValue != null and conditionValue != ''">
                    and #{conditionName} = #{conditionValue}
                </if>
            </where>
    </select>
    <delete id="deleteStudent" parameterType="String">
        delete from student where id = #{id}
    </delete>
</mapper>
